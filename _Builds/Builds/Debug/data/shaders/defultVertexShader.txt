#version 410\n\
layout(location = 0) in vec4 Position;
layout(location = 1) in vec4 Normal;
layout(location = 2) in vec2 Colour;
layout(location = 3) in vec4 TexCoords;
layout(location = 4) in vec4 TexCoords2;
layout(location = 5) in vec4 Tangent;
layout(location = 6) in vec4 Binormal;
layout(location = 7) in vec4 Indicies;
layout(location = 8) in vec4 Weights;

out vec4 vPosition;          
out vec4 vColour;            
out vec2 vTexture;
out vec4 vNormal;
out vec3 vTangent;
out vec3 vBitTangent;
uniform mat4 projectionView;
uniform mat4 model;

const int MAX_BONES = 128;
uniform mat4 bones[MAX_BONES];

void main()
{
	vPosition = Position;
	vColour = vec4(1,1,1,1);
	vTexture = Texture;
	vNormal = Normal;
	vTangent = Tangent.xyz;
	vBitTangent = cross(Normal.xyz, Tangent.xyz);
	
	ivec4 index = ivec4(Indices);
	
	vec4 P = bones[index.x] * Position * Weights.x;
	P += bones[index.y] * Position * Weights.y;
	P += bones[index.z] * Position * Weights.z;
	P += bones[index.w] * Position * Weights.w;
	
	gl_Position = (projectionView * model) * P ;
}